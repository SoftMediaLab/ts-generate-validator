{
  "functions": [],
  "classes": [
      {
          "name": "User",
          "methods": [],
          "typeParameters": [],
          "typeParameterConstraint": [],
          "implements": [],
          "fields": [
              {
                  "name": "name",
                  "type": null,
                  "annotations": [],
                  "valueConstraint": {
                      "isCallConstraint": false,
                      "value": ""
                  },
                  "optional": false,
                  "decorators": [
                      {
                          "name": "MinLengthValidation",
                          "arguments": [
                              2
                          ]
                      },
                      {
                          "name": "MaxLengthValidation",
                          "arguments": [
                              50
                          ]
                      },
                      {
                          "name": "TrimValidation",
                          "arguments": []
                      }
                  ]
              },
              {
                  "name": "surname",
                  "type": null,
                  "annotations": [],
                  "valueConstraint": {
                      "isCallConstraint": false,
                      "value": ""
                  },
                  "optional": false,
                  "decorators": [
                      {
                          "name": "MinLengthValidation",
                          "arguments": [
                              2,
                              "surname length must be more then 2 letters"
                          ]
                      },
                      {
                          "name": "MaxLengthValidation",
                          "arguments": [
                              50,
                              "surname length must be less then 50 letters"
                          ]
                      },
                      {
                          "name": "TrimValidation",
                          "arguments": [
                              "there should be no spaces at the beginning and at the end of surname"
                          ]
                      }
                  ]
              },
              {
                  "name": "age",
                  "type": null,
                  "annotations": [],
                  "valueConstraint": {
                      "isCallConstraint": false,
                      "value": 0
                  },
                  "optional": false,
                  "decorators": [
                      {
                          "name": "MinValidation",
                          "arguments": [
                              18
                          ]
                      },
                      {
                          "name": "MaxValidation",
                          "arguments": [
                              60
                          ]
                      },
                      {
                          "name": "IntegerValidation",
                          "arguments": []
                      }
                  ]
              },
              {
                  "name": "workExperience",
                  "type": null,
                  "annotations": [],
                  "valueConstraint": {
                      "isCallConstraint": false,
                      "value": 0
                  },
                  "optional": false,
                  "decorators": [
                      {
                          "name": "LessThanValidation",
                          "arguments": [
                              "age"
                          ]
                      },
                      {
                          "name": "PositiveValidation",
                          "arguments": []
                      }
                  ]
              },
              {
                  "name": "isActive",
                  "type": null,
                  "annotations": [],
                  "valueConstraint": {
                      "isCallConstraint": false,
                      "value": false
                  },
                  "optional": false,
                  "decorators": [
                      {
                          "name": "EqualValidation",
                          "arguments": [
                              true
                          ]
                      }
                  ]
              },
              {
                  "name": "email",
                  "type": {
                      "typeName": "string",
                      "nameSpace": "",
                      "basicName": "string",
                      "typeKind": 0,
                      "typeArguments": [],
                      "modulePath": null
                  },
                  "annotations": [],
                  "valueConstraint": null,
                  "optional": true,
                  "decorators": [
                      {
                          "name": "EmailValidation",
                          "arguments": []
                      }
                  ]
              },
              {
                  "name": "phone",
                  "type": {
                      "typeName": "string",
                      "nameSpace": "",
                      "basicName": "string",
                      "typeKind": 0,
                      "typeArguments": [],
                      "modulePath": null
                  },
                  "annotations": [],
                  "valueConstraint": null,
                  "optional": true,
                  "decorators": [
                      {
                          "name": "MatchValidation",
                          "arguments": [
                              "/^\\d{10}$/"
                          ]
                      }
                  ]
              },
              {
                  "name": "website",
                  "type": {
                      "typeName": "string",
                      "nameSpace": "",
                      "basicName": "string",
                      "typeKind": 0,
                      "typeArguments": [],
                      "modulePath": null
                  },
                  "annotations": [],
                  "valueConstraint": null,
                  "optional": true,
                  "decorators": [
                      {
                          "name": "UrlValidation",
                          "arguments": []
                      }
                  ]
              },
              {
                  "name": "nickname",
                  "type": null,
                  "annotations": [],
                  "valueConstraint": {
                      "isCallConstraint": false,
                      "value": ""
                  },
                  "optional": false,
                  "decorators": [
                      {
                          "name": "LowercaseValidation",
                          "arguments": []
                      },
                      {
                          "name": "MinLengthValidation",
                          "arguments": [
                              5
                          ]
                      },
                      {
                          "name": "MaxLengthValidation",
                          "arguments": [
                              20
                          ]
                      }
                  ]
              },
              {
                  "name": "cardHolderName",
                  "type": null,
                  "annotations": [],
                  "valueConstraint": {
                      "isCallConstraint": false,
                      "value": ""
                  },
                  "optional": false,
                  "decorators": [
                      {
                          "name": "UppercaseValidation",
                          "arguments": []
                      }
                  ]
              },
              {
                  "name": "insuranceRatio",
                  "type": null,
                  "annotations": [],
                  "valueConstraint": {
                      "isCallConstraint": false,
                      "value": 1
                  },
                  "optional": false,
                  "decorators": [
                      {
                          "name": "FloatValidation",
                          "arguments": []
                      }
                  ]
              },
              {
                  "name": "userType",
                  "type": {
                      "typeName": "UserType",
                      "nameSpace": "",
                      "basicName": "UserType",
                      "typeKind": 0,
                      "typeArguments": [],
                      "modulePath": "mock//user/model.ts"
                  },
                  "annotations": [],
                  "valueConstraint": {
                      "isCallConstraint": false,
                      "value": "UserType.GUEST"
                  },
                  "optional": false,
                  "decorators": []
              }
          ],
          "isInterface": false,
          "decorators": [
              {
                  "name": "Validation",
                  "arguments": []
              },
              {
                  "name": "RequiredOneOfValidation",
                  "arguments": [
                      [
                          "email, phone"
                      ]
                  ]
              }
          ],
          "annotations": [],
          "extends": [],
          "moduleName": null,
          "annotationOverridings": {}
      }
  ],
  "aliases": [],
  "enumDeclarations": [],
  "imports": {},
  "_imports": [
      {
          "clauses": [
              "UserType"
          ],
          "absPathNode": [
              ".",
              "mock",
              "user",
              "type",
              "model"
          ],
          "isNodeModule": false
      },
      {
          "clauses": [
              "EmailValidation",
              "EqualValidation",
              "FloatValidation",
              "IntegerValidation",
              "LessThanValidation",
              "LowercaseValidation",
              "MatchValidation",
              "MaxLengthValidation",
              "MaxValidation",
              "MinLengthValidation",
              "MinValidation",
              "PositiveValidation",
              "RequiredOneOfValidation",
              "TrimValidation",
              "UppercaseValidation",
              "UrlValidation",
              "Validation"
          ],
          "absPathNode": [
              "",
              "Users",
              "alex-shul",
              "Desktop",
              "projects",
              "ts-generate-validator",
              "src",
              "decorators",
              "index"
          ],
          "isNodeModule": false
      }
  ],
  "name": "mock//user/model.ts"
}