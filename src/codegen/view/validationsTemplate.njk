{% for import in imports %}
import { {{ import.clauses }} } from '{{ import.path }}';
{% endfor %}
{% if configFilePath %}
import * as configFromFile from '{{ configFilePath }}';

initConfig(configFromFile);
{% endif %}

{% for validation in validations %}
export const {{ validation.name }}: GeneratedValidation = {% if validation.async %}async {% endif %}(
  payload: GeneratedValidationPayload<typeof {{ validation.modelClassName }}, UserContext>
) => {
  {% if validation.items.length %}{% else %}// eslint-disable-next-line{% endif %}
  const config = mergeDeep({}, getConfig(), payload.{{ validationArgs.config }});

  {% for item in validation.items %}
  {{ item.validatorName }}({
    property: payload.{{ validationArgs.data }}.{{ item.propertyName }},
    propertyName: '{{ item.propertyName }}',
    data: payload.{{ validationArgs.data }},
    config,
    {% for vArg in item.validatorPayload %}
    {{ vArg.property }}: {% if vArg.type === 'string' %}'{{ vArg.value }}'{% else %}{{ vArg.value }}{% endif %},
    {% endfor %}
  });
  {% endfor %}
}

{% endfor %}