/*Codegen*/
// tslint:disable
/* eslint-disable */

{% for import in imports %}
import { {{ import.clauses }} } from '{{ import.path }}';
{% endfor %}

{% for validation in validations %}
export const {{ validation.name }}: GeneratedValidation = {% if validation.async %}async {% endif %}<
  D extends Data = typeof {{ validation.modelClassName }},
  C extends UserContext = UserContext
>(
  data: D,
  configArg?: ValidationConfig,
  context?: C
) => {
  const config = <ValidationConfig>mergeDeep({}, getConfig(), configArg ?? {});

  {% for item in validation.items %}
  {{ item.validatorName }}({
    property: data?.{{ item.propertyName }},
    propertyName: '{{ item.propertyName }}',
    data,
    config,
    context,
    {% for vArg in item.validatorPayload %}
    {{ vArg.property }}: {% if vArg.type === 'string' %}'{{ vArg.value }}'{% else %}{{ vArg.value }}{% endif %},
    {% endfor %}
  });
  {% endfor %}
}

{% endfor %}