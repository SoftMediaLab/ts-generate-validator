// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`codegen/dog create validators: generated validators at "/Users/alex-shul/Desktop/projects/ts-generate-validator/test/mock/dog/generated/validators/model.ts" 1`] = `
"import {
  GeneratedValidation,
  GeneratedValidationPayload,
  UserContext,
  initConfig,
  getConfig,
  mergeDeep,
  typeValidator,
  minLengthValidator,
  maxLengthValidator,
  minValidator,
  maxValidator,
  integerValidator,
  lessThanValidator
} from 'ts-generate-validator';

import { Dog } from '../../model';

export const dogValidator: GeneratedValidation = (payload: GeneratedValidationPayload<typeof Dog, UserContext>) => {
  const config = mergeDeep({}, getConfig(), payload.config);

  typeValidator({
    property: payload.data.name,
    propertyName: 'name',
    data: payload.data,
    config
  });

  minLengthValidator({
    property: payload.data.name,
    propertyName: 'name',
    data: payload.data,
    config,

    threshold: 5
  });

  maxLengthValidator({
    property: payload.data.name,
    propertyName: 'name',
    data: payload.data,
    config,

    threshold: 20
  });

  typeValidator({
    property: payload.data.age,
    propertyName: 'age',
    data: payload.data,
    config
  });

  minValidator({
    property: payload.data.age,
    propertyName: 'age',
    data: payload.data,
    config,

    threshold: 2,

    customMessage: 'only dogs over 2 years old are accepted'
  });

  maxValidator({
    property: payload.data.age,
    propertyName: 'age',
    data: payload.data,
    config,

    threshold: 16,

    customMessage: \\"dogs can't live that long\\"
  });

  integerValidator({
    property: payload.data.age,
    propertyName: 'age',
    data: payload.data,
    config,

    customMessage: 'age must be an integer value'
  });

  typeValidator({
    property: payload.data.ownedYears,
    propertyName: 'ownedYears',
    data: payload.data,
    config
  });

  lessThanValidator({
    property: payload.data.ownedYears,
    propertyName: 'ownedYears',
    data: payload.data,
    config,

    targetPropertyName: 'age',

    customMessage: \\"dog can't be owned by anyone longer than his age\\"
  });
};
"
`;

exports[`codegen/dog parse & prepare: data for render 1`] = `
Array [
  Object {
    "configFilePath": undefined,
    "fileName": "model",
    "filePath": "/Users/alex-shul/Desktop/projects/ts-generate-validator/test/mock/dog/generated/validators",
    "imports": Array [
      Object {
        "clauses": "GeneratedValidation, GeneratedValidationPayload, UserContext, initConfig, getConfig, mergeDeep, typeValidator, minLengthValidator, maxLengthValidator, minValidator, maxValidator, integerValidator, lessThanValidator",
        "path": "ts-generate-validator",
      },
      Object {
        "clauses": "Dog",
        "path": "../../model",
      },
    ],
    "validationArgs": Object {
      "config": "config",
      "data": "data",
    },
    "validations": Array [
      Object {
        "async": false,
        "items": Array [
          Object {
            "propertyName": "name",
            "validatorName": "typeValidator",
            "validatorPayload": Array [],
          },
          Object {
            "propertyName": "name",
            "validatorName": "minLengthValidator",
            "validatorPayload": Array [
              Object {
                "property": "threshold",
                "type": "",
                "value": "5",
              },
            ],
          },
          Object {
            "propertyName": "name",
            "validatorName": "maxLengthValidator",
            "validatorPayload": Array [
              Object {
                "property": "threshold",
                "type": "",
                "value": "20",
              },
            ],
          },
          Object {
            "propertyName": "age",
            "validatorName": "typeValidator",
            "validatorPayload": Array [],
          },
          Object {
            "propertyName": "age",
            "validatorName": "minValidator",
            "validatorPayload": Array [
              Object {
                "property": "threshold",
                "type": "",
                "value": "2",
              },
              Object {
                "property": "customMessage",
                "type": "string",
                "value": "only dogs over 2 years old are accepted",
              },
            ],
          },
          Object {
            "propertyName": "age",
            "validatorName": "maxValidator",
            "validatorPayload": Array [
              Object {
                "property": "threshold",
                "type": "",
                "value": "16",
              },
              Object {
                "property": "customMessage",
                "type": "string",
                "value": "dogs can\\\\'t live that long",
              },
            ],
          },
          Object {
            "propertyName": "age",
            "validatorName": "integerValidator",
            "validatorPayload": Array [
              Object {
                "property": "customMessage",
                "type": "string",
                "value": "age must be an integer value",
              },
            ],
          },
          Object {
            "propertyName": "ownedYears",
            "validatorName": "typeValidator",
            "validatorPayload": Array [],
          },
          Object {
            "propertyName": "ownedYears",
            "validatorName": "lessThanValidator",
            "validatorPayload": Array [
              Object {
                "property": "targetPropertyName",
                "type": "string",
                "value": "age",
              },
              Object {
                "property": "customMessage",
                "type": "string",
                "value": "dog can\\\\'t be owned by anyone longer than his age",
              },
            ],
          },
        ],
        "modelClassName": "Dog",
        "name": "dogValidator",
      },
    ],
  },
]
`;

exports[`codegen/dog parse & prepare: parsed metadata 1`] = `
Array [
  Object {
    "classes": Array [
      Object {
        "decorators": Array [
          Object {
            "arguments": Array [],
            "name": "Validation",
          },
        ],
        "fields": Array [
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [
                  5,
                ],
                "name": "MinLengthValidation",
              },
              Object {
                "arguments": Array [
                  20,
                ],
                "name": "MaxLengthValidation",
              },
            ],
            "name": "name",
            "optional": false,
            "type": Object {
              "name": "string",
              "validationType": "string",
            },
          },
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [
                  2,
                  "only dogs over 2 years old are accepted",
                ],
                "name": "MinValidation",
              },
              Object {
                "arguments": Array [
                  16,
                  "dogs can't live that long",
                ],
                "name": "MaxValidation",
              },
              Object {
                "arguments": Array [
                  "age must be an integer value",
                ],
                "name": "IntegerValidation",
              },
            ],
            "name": "age",
            "optional": false,
            "type": Object {
              "name": "number",
              "validationType": "number",
            },
          },
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [
                  "age",
                  "dog can't be owned by anyone longer than his age",
                ],
                "name": "LessThanValidation",
              },
            ],
            "name": "ownedYears",
            "optional": false,
            "type": Object {
              "name": "number",
              "validationType": "number",
            },
          },
          Object {
            "decorators": Array [],
            "name": "owner",
            "optional": true,
            "type": Object {
              "name": "mock",
              "referencePath": "/Users/alex-shul/Desktop/projects/ts-generate-validator/test/mock/dog/model",
              "validationType": "notSupported",
            },
          },
        ],
        "name": "Dog",
      },
    ],
    "name": "/Users/alex-shul/Desktop/projects/ts-generate-validator/test/mock/dog/model",
  },
]
`;
