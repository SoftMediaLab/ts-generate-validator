// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`codegen/user parse & prepare: data for render 1`] = `
Array [
  Object {
    "fileName": ".Users.alex-shul.Desktop.projects.ts-generate-validator.test.mock.user.model",
    "filePath": "/Users/alex-shul/Desktop/projects/ts-generate-validator/test/mock/user/generated/validators",
    "imports": Array [
      Object {
        "clauses": Array [
          "GeneratedValidation",
          "typeValidator",
          "minLengthValidator",
          "maxLengthValidator",
          "trimValidator",
          "minValidator",
          "maxValidator",
          "integerValidator",
          "lessThanValidator",
          "positiveValidator",
          "equalValidator",
          "emailValidator",
          "matchValidator",
          "urlValidator",
          "lowercaseValidator",
          "uppercaseValidator",
          "floatValidator",
        ],
        "path": "ts-generate-validator",
      },
      Object {
        "clauses": Array [
          "User",
        ],
        "path": "../../model",
      },
    ],
    "validationArgs": Array [
      "data",
      "config",
    ],
    "validations": Array [
      Object {
        "async": false,
        "items": Array [
          Object {
            "propertyName": "email, phone",
            "validatorName": "requiredOneOfValidator",
            "validatorPayload": Array [
              Object {
                "property": "fields",
                "value": "['email', 'phone']",
              },
            ],
          },
          Object {
            "propertyName": "name",
            "validatorName": "typeValidator",
            "validatorPayload": Array [],
          },
          Object {
            "propertyName": "name",
            "validatorName": "minLengthValidator",
            "validatorPayload": Array [
              Object {
                "property": "threshold",
                "value": "2",
              },
            ],
          },
          Object {
            "propertyName": "name",
            "validatorName": "maxLengthValidator",
            "validatorPayload": Array [
              Object {
                "property": "threshold",
                "value": "50",
              },
            ],
          },
          Object {
            "propertyName": "name",
            "validatorName": "trimValidator",
            "validatorPayload": Array [],
          },
          Object {
            "propertyName": "surname",
            "validatorName": "typeValidator",
            "validatorPayload": Array [],
          },
          Object {
            "propertyName": "surname",
            "validatorName": "minLengthValidator",
            "validatorPayload": Array [
              Object {
                "property": "threshold",
                "value": "2",
              },
              Object {
                "property": "customMessage",
                "value": "surname length must be more then 2 letters",
              },
            ],
          },
          Object {
            "propertyName": "surname",
            "validatorName": "maxLengthValidator",
            "validatorPayload": Array [
              Object {
                "property": "threshold",
                "value": "50",
              },
              Object {
                "property": "customMessage",
                "value": "surname length must be less then 50 letters",
              },
            ],
          },
          Object {
            "propertyName": "surname",
            "validatorName": "trimValidator",
            "validatorPayload": Array [
              Object {
                "property": "customMessage",
                "value": "there should be no spaces at the beginning and at the end of surname",
              },
            ],
          },
          Object {
            "propertyName": "age",
            "validatorName": "typeValidator",
            "validatorPayload": Array [],
          },
          Object {
            "propertyName": "age",
            "validatorName": "minValidator",
            "validatorPayload": Array [
              Object {
                "property": "threshold",
                "value": "18",
              },
            ],
          },
          Object {
            "propertyName": "age",
            "validatorName": "maxValidator",
            "validatorPayload": Array [
              Object {
                "property": "threshold",
                "value": "60",
              },
            ],
          },
          Object {
            "propertyName": "age",
            "validatorName": "integerValidator",
            "validatorPayload": Array [],
          },
          Object {
            "propertyName": "workExperience",
            "validatorName": "typeValidator",
            "validatorPayload": Array [],
          },
          Object {
            "propertyName": "workExperience",
            "validatorName": "lessThanValidator",
            "validatorPayload": Array [
              Object {
                "property": "targetPropertyName",
                "value": "age",
              },
            ],
          },
          Object {
            "propertyName": "workExperience",
            "validatorName": "positiveValidator",
            "validatorPayload": Array [],
          },
          Object {
            "propertyName": "isActive",
            "validatorName": "typeValidator",
            "validatorPayload": Array [],
          },
          Object {
            "propertyName": "isActive",
            "validatorName": "equalValidator",
            "validatorPayload": Array [
              Object {
                "property": "value",
                "value": "true",
              },
            ],
          },
          Object {
            "propertyName": "email",
            "validatorName": "typeValidator",
            "validatorPayload": Array [],
          },
          Object {
            "propertyName": "email",
            "validatorName": "emailValidator",
            "validatorPayload": Array [],
          },
          Object {
            "propertyName": "phone",
            "validatorName": "typeValidator",
            "validatorPayload": Array [],
          },
          Object {
            "propertyName": "phone",
            "validatorName": "matchValidator",
            "validatorPayload": Array [
              Object {
                "property": "regexp",
                "value": "/^\\\\d{10}$/",
              },
            ],
          },
          Object {
            "propertyName": "website",
            "validatorName": "typeValidator",
            "validatorPayload": Array [],
          },
          Object {
            "propertyName": "website",
            "validatorName": "urlValidator",
            "validatorPayload": Array [],
          },
          Object {
            "propertyName": "nickname",
            "validatorName": "typeValidator",
            "validatorPayload": Array [],
          },
          Object {
            "propertyName": "nickname",
            "validatorName": "lowercaseValidator",
            "validatorPayload": Array [],
          },
          Object {
            "propertyName": "nickname",
            "validatorName": "minLengthValidator",
            "validatorPayload": Array [
              Object {
                "property": "threshold",
                "value": "5",
              },
            ],
          },
          Object {
            "propertyName": "nickname",
            "validatorName": "maxLengthValidator",
            "validatorPayload": Array [
              Object {
                "property": "threshold",
                "value": "20",
              },
            ],
          },
          Object {
            "propertyName": "cardHolderName",
            "validatorName": "typeValidator",
            "validatorPayload": Array [],
          },
          Object {
            "propertyName": "cardHolderName",
            "validatorName": "uppercaseValidator",
            "validatorPayload": Array [],
          },
          Object {
            "propertyName": "insuranceRatio",
            "validatorName": "typeValidator",
            "validatorPayload": Array [],
          },
          Object {
            "propertyName": "insuranceRatio",
            "validatorName": "floatValidator",
            "validatorPayload": Array [],
          },
        ],
        "name": "userValidator",
      },
    ],
  },
]
`;

exports[`codegen/user parse & prepare: parsed metadata 1`] = `
Array [
  Object {
    "classes": Array [
      Object {
        "decorators": Array [
          Object {
            "arguments": Array [],
            "name": "Validation",
          },
          Object {
            "arguments": Array [
              Array [
                "email",
                "phone",
              ],
            ],
            "name": "RequiredOneOfValidation",
          },
        ],
        "fields": Array [
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [
                  2,
                ],
                "name": "MinLengthValidation",
              },
              Object {
                "arguments": Array [
                  50,
                ],
                "name": "MaxLengthValidation",
              },
              Object {
                "arguments": Array [],
                "name": "TrimValidation",
              },
            ],
            "name": "name",
            "optional": false,
            "type": Object {
              "name": "string",
              "validationType": "string",
            },
          },
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [
                  2,
                  "surname length must be more then 2 letters",
                ],
                "name": "MinLengthValidation",
              },
              Object {
                "arguments": Array [
                  50,
                  "surname length must be less then 50 letters",
                ],
                "name": "MaxLengthValidation",
              },
              Object {
                "arguments": Array [
                  "there should be no spaces at the beginning and at the end of surname",
                ],
                "name": "TrimValidation",
              },
            ],
            "name": "surname",
            "optional": false,
            "type": Object {
              "name": "string",
              "validationType": "string",
            },
          },
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [
                  18,
                ],
                "name": "MinValidation",
              },
              Object {
                "arguments": Array [
                  60,
                ],
                "name": "MaxValidation",
              },
              Object {
                "arguments": Array [],
                "name": "IntegerValidation",
              },
            ],
            "name": "age",
            "optional": false,
            "type": Object {
              "name": "number",
              "validationType": "number",
            },
          },
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [
                  "age",
                ],
                "name": "LessThanValidation",
              },
              Object {
                "arguments": Array [],
                "name": "PositiveValidation",
              },
            ],
            "name": "workExperience",
            "optional": false,
            "type": Object {
              "name": "number",
              "validationType": "number",
            },
          },
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [
                  true,
                ],
                "name": "EqualValidation",
              },
            ],
            "name": "isActive",
            "optional": false,
            "type": Object {
              "name": "boolean",
              "validationType": "boolean",
            },
          },
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [],
                "name": "EmailValidation",
              },
            ],
            "name": "email",
            "optional": true,
            "type": Object {
              "name": "string",
              "validationType": "string",
            },
          },
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [
                  "/^\\\\d{10}$/",
                ],
                "name": "MatchValidation",
              },
            ],
            "name": "phone",
            "optional": true,
            "type": Object {
              "name": "string",
              "validationType": "string",
            },
          },
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [],
                "name": "UrlValidation",
              },
            ],
            "name": "website",
            "optional": true,
            "type": Object {
              "name": "string",
              "validationType": "string",
            },
          },
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [],
                "name": "LowercaseValidation",
              },
              Object {
                "arguments": Array [
                  5,
                ],
                "name": "MinLengthValidation",
              },
              Object {
                "arguments": Array [
                  20,
                ],
                "name": "MaxLengthValidation",
              },
            ],
            "name": "nickname",
            "optional": false,
            "type": Object {
              "name": "string",
              "validationType": "string",
            },
          },
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [],
                "name": "UppercaseValidation",
              },
            ],
            "name": "cardHolderName",
            "optional": false,
            "type": Object {
              "name": "string",
              "validationType": "string",
            },
          },
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [],
                "name": "FloatValidation",
              },
            ],
            "name": "insuranceRatio",
            "optional": false,
            "type": Object {
              "name": "number",
              "validationType": "number",
            },
          },
          Object {
            "decorators": Array [],
            "name": "userType",
            "optional": true,
            "type": Object {
              "name": "UserType",
              "referencePath": "/Users/alex-shul/Desktop/projects/ts-generate-validator/test/mock/user/model",
              "validationType": "notSupported",
            },
          },
        ],
        "name": "User",
      },
    ],
    "name": "/Users/alex-shul/Desktop/projects/ts-generate-validator/test/mock/user/model",
  },
]
`;
