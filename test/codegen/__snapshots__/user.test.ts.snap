// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`codegen/user parse metadata 1`] = `
Array [
  Object {
    "classes": Array [
      Object {
        "decorators": Array [
          Object {
            "arguments": Array [],
            "name": "Validation",
          },
          Object {
            "arguments": Array [
              Array [
                "email, phone",
              ],
            ],
            "name": "RequiredOneOfValidation",
          },
        ],
        "fields": Array [
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [
                  2,
                ],
                "name": "MinLengthValidation",
              },
              Object {
                "arguments": Array [
                  50,
                ],
                "name": "MaxLengthValidation",
              },
              Object {
                "arguments": Array [],
                "name": "TrimValidation",
              },
            ],
            "name": "name",
            "optional": false,
            "type": Object {
              "name": "string",
              "validationType": "string",
            },
          },
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [
                  2,
                  "surname length must be more then 2 letters",
                ],
                "name": "MinLengthValidation",
              },
              Object {
                "arguments": Array [
                  50,
                  "surname length must be less then 50 letters",
                ],
                "name": "MaxLengthValidation",
              },
              Object {
                "arguments": Array [
                  "there should be no spaces at the beginning and at the end of surname",
                ],
                "name": "TrimValidation",
              },
            ],
            "name": "surname",
            "optional": false,
            "type": Object {
              "name": "string",
              "validationType": "string",
            },
          },
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [
                  18,
                ],
                "name": "MinValidation",
              },
              Object {
                "arguments": Array [
                  60,
                ],
                "name": "MaxValidation",
              },
              Object {
                "arguments": Array [],
                "name": "IntegerValidation",
              },
            ],
            "name": "age",
            "optional": false,
            "type": Object {
              "name": "number",
              "validationType": "number",
            },
          },
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [
                  "age",
                ],
                "name": "LessThanValidation",
              },
              Object {
                "arguments": Array [],
                "name": "PositiveValidation",
              },
            ],
            "name": "workExperience",
            "optional": false,
            "type": Object {
              "name": "number",
              "validationType": "number",
            },
          },
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [
                  true,
                ],
                "name": "EqualValidation",
              },
            ],
            "name": "isActive",
            "optional": false,
            "type": Object {
              "name": "boolean",
              "validationType": "boolean",
            },
          },
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [],
                "name": "EmailValidation",
              },
            ],
            "name": "email",
            "optional": true,
            "type": Object {
              "name": "string",
              "validationType": "string",
            },
          },
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [
                  "/^\\\\d{10}$/",
                ],
                "name": "MatchValidation",
              },
            ],
            "name": "phone",
            "optional": true,
            "type": Object {
              "name": "string",
              "validationType": "string",
            },
          },
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [],
                "name": "UrlValidation",
              },
            ],
            "name": "website",
            "optional": true,
            "type": Object {
              "name": "string",
              "validationType": "string",
            },
          },
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [],
                "name": "LowercaseValidation",
              },
              Object {
                "arguments": Array [
                  5,
                ],
                "name": "MinLengthValidation",
              },
              Object {
                "arguments": Array [
                  20,
                ],
                "name": "MaxLengthValidation",
              },
            ],
            "name": "nickname",
            "optional": false,
            "type": Object {
              "name": "string",
              "validationType": "string",
            },
          },
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [],
                "name": "UppercaseValidation",
              },
            ],
            "name": "cardHolderName",
            "optional": false,
            "type": Object {
              "name": "string",
              "validationType": "string",
            },
          },
          Object {
            "decorators": Array [
              Object {
                "arguments": Array [],
                "name": "FloatValidation",
              },
            ],
            "name": "insuranceRatio",
            "optional": false,
            "type": Object {
              "name": "number",
              "validationType": "number",
            },
          },
          Object {
            "decorators": Array [],
            "name": "userType",
            "optional": true,
            "type": Object {
              "name": "UserType",
              "referencePath": "/Users/alex-shul/Desktop/projects/ts-generate-validator/test/mock/user/model",
              "validationType": "notSupported",
            },
          },
        ],
        "name": "User",
      },
    ],
    "name": "/Users/alex-shul/Desktop/projects/ts-generate-validator/test/mock/user/model",
  },
]
`;
